diff --git a/libdjvu/DjVuToPS.cpp b/libdjvu/DjVuToPS.cpp
index f72a4c9..071d5f1 100644
--- a/libdjvu/DjVuToPS.cpp
+++ b/libdjvu/DjVuToPS.cpp
@@ -334,7 +334,7 @@ store_doc_prolog(ByteStream &str, int pages, int dpi, GRect *grect)
   write(str, "%%%%CreationDate: %s", ctime(&tm));
   // For
 #ifdef UNIX
-  passwd *pswd = getpwuid(getuid());
+/*  passwd *pswd = getpwuid(getuid());
   if (pswd)
     {
       char *s = strchr(pswd->pw_gecos, ',');
@@ -347,7 +347,7 @@ store_doc_prolog(ByteStream &str, int pages, int dpi, GRect *grect)
         s = pswd->pw_name;
       if (s)
         write(str, "%%%%For: %s\n", s);
-    }
+    }*/
 #endif
   // Language
   write(str, "%%%%LanguageLevel: %d\n", options.get_level());
diff --git a/libdjvu/GException.cpp b/libdjvu/GException.cpp
index 4585ebe..b60f738 100644
--- a/libdjvu/GException.cpp
+++ b/libdjvu/GException.cpp
@@ -217,7 +217,7 @@ static void (*old_handler)() = std::set_new_handler(throw_memory_error);
 #   ifdef HAVE_STDINCLUDES
 static void (*old_handler)() = std::set_new_handler(throw_memory_error);
 #   else
-static void (*old_handler)() = set_new_handler(throw_memory_error);
+//static void (*old_handler)() = set_new_handler(throw_memory_error);
 #  endif // HAVE_STDINCLUDES
 # endif // ! WIN32
 #endif // !NEED_DJVU_MEMORY
diff --git a/libdjvu/GThreads.cpp b/libdjvu/GThreads.cpp
index 0b0fe0a..f0190e1 100644
--- a/libdjvu/GThreads.cpp
+++ b/libdjvu/GThreads.cpp
@@ -447,7 +447,8 @@ void
 GThread::terminate()
 {
   if (xentry || xarg)
-    pthread_cancel(hthr);
+    //pthread_cancel(hthr);
+    G_THROW( "Not supported" );
 }

 int
